import sqlite3

# Connexion √† la vraie base de donn√©es
conn = sqlite3.connect(r'D:\PROJET\FNEV4\data\FNEV4.db')
cursor = conn.cursor()

print("=== ANALYSE COMPL√àTE DES FACTURES ===\n")

# 1. Statistiques g√©n√©rales
cursor.execute("SELECT COUNT(*) FROM FneInvoices")
total_factures = cursor.fetchone()[0]

cursor.execute("SELECT COUNT(*) FROM FneInvoiceItems")
total_articles = cursor.fetchone()[0]

cursor.execute("SELECT COUNT(DISTINCT FneInvoiceId) FROM FneInvoiceItems")
factures_avec_articles = cursor.fetchone()[0] if cursor.fetchone() else 0

print(f"üìä STATISTIQUES G√âN√âRALES")
print(f"   Total factures: {total_factures}")
print(f"   Total articles: {total_articles}")
print(f"   Factures avec articles: {factures_avec_articles}")
print(f"   Factures SANS articles: {total_factures - factures_avec_articles}\n")

# 2. Examiner quelques factures repr√©sentatives
print("üîç √âCHANTILLON DE FACTURES")
cursor.execute("""
SELECT InvoiceNumber, TotalAmountHT, TotalAmountTTC, Status, InvoiceDate
FROM FneInvoices 
ORDER BY InvoiceNumber 
LIMIT 10
""")
factures_sample = cursor.fetchall()

for f in factures_sample:
    # Compter les articles pour chaque facture
    cursor.execute("SELECT COUNT(*) FROM FneInvoiceItems WHERE FneInvoiceId = (SELECT Id FROM FneInvoices WHERE InvoiceNumber = ?)", (f[0],))
    nb_articles = cursor.fetchone()[0]
    
    print(f"   üßæ {f[0]} - {f[1]}‚Ç¨ HT - {f[2]}‚Ç¨ TTC - {f[3]} - {nb_articles} articles")

# 3. Identifier la facture avec articles (pour voir la structure)
print(f"\n‚úÖ FACTURE AVEC ARTICLES (pour r√©f√©rence)")
cursor.execute("""
SELECT f.InvoiceNumber, i.ProductCode, i.Description, i.Quantity, i.UnitPrice, i.LineAmountHT
FROM FneInvoices f
INNER JOIN FneInvoiceItems i ON f.Id = i.FneInvoiceId
LIMIT 5
""")
articles_existants = cursor.fetchall()

if articles_existants:
    for art in articles_existants:
        print(f"   üì¶ Facture {art[0]}: {art[1]} - {art[2]} (Qt√©: {art[3]}, Prix: {art[4]}‚Ç¨, Total: {art[5]}‚Ç¨)")
else:
    print("   ‚ùå Aucun article trouv√© dans toute la base")

# 4. V√©rifier les types de TVA disponibles
print(f"\nüí∞ TYPES DE TVA DISPONIBLES")
cursor.execute("SELECT Code, Description, Rate FROM VatTypes")
vat_types = cursor.fetchall()

if vat_types:
    for vat in vat_types:
        print(f"   üìã {vat[0]}: {vat[1]} ({vat[2]}%)")
else:
    print("   ‚ùå Aucun type de TVA configur√©")

# 5. Probl√®me principal identifi√©
print(f"\nüö® PROBL√àME IDENTIFI√â")
print(f"   ‚Ä¢ Le service d'import Sage100 original ne cr√©ait PAS les FneInvoiceItems")
print(f"   ‚Ä¢ Les factures sont compl√®tes mais sans d√©tail des articles")
print(f"   ‚Ä¢ Il faut soit r√©importer, soit cr√©er un script de migration")

conn.close()

print(f"\nüí° SOLUTIONS POSSIBLES:")
print(f"   1. R√©importer tous les fichiers Excel Sage100 (recommand√©)")
print(f"   2. Cr√©er un script de migration pour reconstruire les articles")
print(f"   3. Supprimer les factures sans articles et r√©importer")